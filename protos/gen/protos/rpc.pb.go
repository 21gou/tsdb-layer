// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/rpc.proto

package tsdblayer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteBatchRequest struct {
	Batch                []*WriteRequest `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WriteBatchRequest) Reset()         { *m = WriteBatchRequest{} }
func (m *WriteBatchRequest) String() string { return proto.CompactTextString(m) }
func (*WriteBatchRequest) ProtoMessage()    {}
func (*WriteBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{0}
}

func (m *WriteBatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteBatchRequest.Unmarshal(m, b)
}
func (m *WriteBatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteBatchRequest.Marshal(b, m, deterministic)
}
func (m *WriteBatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteBatchRequest.Merge(m, src)
}
func (m *WriteBatchRequest) XXX_Size() int {
	return xxx_messageInfo_WriteBatchRequest.Size(m)
}
func (m *WriteBatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteBatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteBatchRequest proto.InternalMessageInfo

func (m *WriteBatchRequest) GetBatch() []*WriteRequest {
	if m != nil {
		return m.Batch
	}
	return nil
}

type ReadBatchRequest struct {
	Batch                []*ReadRequest `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReadBatchRequest) Reset()         { *m = ReadBatchRequest{} }
func (m *ReadBatchRequest) String() string { return proto.CompactTextString(m) }
func (*ReadBatchRequest) ProtoMessage()    {}
func (*ReadBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{1}
}

func (m *ReadBatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadBatchRequest.Unmarshal(m, b)
}
func (m *ReadBatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadBatchRequest.Marshal(b, m, deterministic)
}
func (m *ReadBatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadBatchRequest.Merge(m, src)
}
func (m *ReadBatchRequest) XXX_Size() int {
	return xxx_messageInfo_ReadBatchRequest.Size(m)
}
func (m *ReadBatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadBatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadBatchRequest proto.InternalMessageInfo

func (m *ReadBatchRequest) GetBatch() []*ReadRequest {
	if m != nil {
		return m.Batch
	}
	return nil
}

type ReadBatchResponse struct {
	Batch                []*ReadResponse `protobuf:"bytes,1,rep,name=batch,proto3" json:"batch,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReadBatchResponse) Reset()         { *m = ReadBatchResponse{} }
func (m *ReadBatchResponse) String() string { return proto.CompactTextString(m) }
func (*ReadBatchResponse) ProtoMessage()    {}
func (*ReadBatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{2}
}

func (m *ReadBatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadBatchResponse.Unmarshal(m, b)
}
func (m *ReadBatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadBatchResponse.Marshal(b, m, deterministic)
}
func (m *ReadBatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadBatchResponse.Merge(m, src)
}
func (m *ReadBatchResponse) XXX_Size() int {
	return xxx_messageInfo_ReadBatchResponse.Size(m)
}
func (m *ReadBatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadBatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadBatchResponse proto.InternalMessageInfo

func (m *ReadBatchResponse) GetBatch() []*ReadResponse {
	if m != nil {
		return m.Batch
	}
	return nil
}

type WriteRequest struct {
	SeriesId             string     `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Datapoint            *Datapoint `protobuf:"bytes,2,opt,name=datapoint,proto3" json:"datapoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{3}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetSeriesId() string {
	if m != nil {
		return m.SeriesId
	}
	return ""
}

func (m *WriteRequest) GetDatapoint() *Datapoint {
	if m != nil {
		return m.Datapoint
	}
	return nil
}

type ReadRequest struct {
	// TODO(rartoul): Time ranges.
	SeriesId             string   `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{4}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetSeriesId() string {
	if m != nil {
		return m.SeriesId
	}
	return ""
}

type ReadResponse struct {
	SeriesId             string       `protobuf:"bytes,1,opt,name=series_id,json=seriesId,proto3" json:"series_id,omitempty"`
	Datapoints           []*Datapoint `protobuf:"bytes,2,rep,name=datapoints,proto3" json:"datapoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{5}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetSeriesId() string {
	if m != nil {
		return m.SeriesId
	}
	return ""
}

func (m *ReadResponse) GetDatapoints() []*Datapoint {
	if m != nil {
		return m.Datapoints
	}
	return nil
}

type Datapoint struct {
	TimestampNanos       uint64   `protobuf:"varint,1,opt,name=timestamp_nanos,json=timestampNanos,proto3" json:"timestamp_nanos,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Datapoint) Reset()         { *m = Datapoint{} }
func (m *Datapoint) String() string { return proto.CompactTextString(m) }
func (*Datapoint) ProtoMessage()    {}
func (*Datapoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{6}
}

func (m *Datapoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datapoint.Unmarshal(m, b)
}
func (m *Datapoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datapoint.Marshal(b, m, deterministic)
}
func (m *Datapoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datapoint.Merge(m, src)
}
func (m *Datapoint) XXX_Size() int {
	return xxx_messageInfo_Datapoint.Size(m)
}
func (m *Datapoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Datapoint.DiscardUnknown(m)
}

var xxx_messageInfo_Datapoint proto.InternalMessageInfo

func (m *Datapoint) GetTimestampNanos() uint64 {
	if m != nil {
		return m.TimestampNanos
	}
	return 0
}

func (m *Datapoint) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a21bee4348fdb8d8, []int{7}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WriteBatchRequest)(nil), "tsdblayer.WriteBatchRequest")
	proto.RegisterType((*ReadBatchRequest)(nil), "tsdblayer.ReadBatchRequest")
	proto.RegisterType((*ReadBatchResponse)(nil), "tsdblayer.ReadBatchResponse")
	proto.RegisterType((*WriteRequest)(nil), "tsdblayer.WriteRequest")
	proto.RegisterType((*ReadRequest)(nil), "tsdblayer.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "tsdblayer.ReadResponse")
	proto.RegisterType((*Datapoint)(nil), "tsdblayer.Datapoint")
	proto.RegisterType((*Empty)(nil), "tsdblayer.Empty")
}

func init() { proto.RegisterFile("protos/rpc.proto", fileDescriptor_a21bee4348fdb8d8) }

var fileDescriptor_a21bee4348fdb8d8 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x61, 0x4b, 0x02, 0x31,
	0x18, 0xc7, 0x9d, 0x65, 0xb5, 0x47, 0x31, 0x1d, 0x52, 0x47, 0xfa, 0x42, 0xf6, 0x26, 0x89, 0x34,
	0xb8, 0x7a, 0x1d, 0x71, 0x18, 0x54, 0x44, 0xc8, 0x0a, 0x7a, 0x29, 0xd3, 0x1b, 0x74, 0xa0, 0x77,
	0xeb, 0x36, 0x03, 0x3f, 0x48, 0xdf, 0x37, 0x6e, 0xcb, 0x39, 0x45, 0x7c, 0xe7, 0xf6, 0xfc, 0xfc,
	0x3d, 0xff, 0xdd, 0xf3, 0x40, 0x43, 0xe6, 0x99, 0xce, 0xd4, 0x4d, 0x2e, 0xa7, 0x03, 0xf3, 0x93,
	0x60, 0xad, 0xe2, 0xc9, 0x8c, 0x2f, 0x45, 0x4e, 0x23, 0x68, 0x7e, 0xe6, 0x89, 0x16, 0x11, 0xd7,
	0xd3, 0x2f, 0x26, 0xbe, 0x17, 0x42, 0x69, 0xd2, 0x87, 0xca, 0xa4, 0x38, 0x07, 0xa8, 0x7b, 0xd0,
	0xab, 0x86, 0xe7, 0x03, 0xc7, 0x0f, 0x0c, 0xfc, 0xcf, 0x31, 0x4b, 0xd1, 0x07, 0x68, 0x30, 0xc1,
	0xe3, 0x0d, 0xc5, 0xf5, 0xa6, 0xe2, 0xcc, 0x53, 0x14, 0xec, 0x96, 0x21, 0x82, 0xa6, 0x67, 0x50,
	0x32, 0x4b, 0x95, 0xd8, 0x97, 0xc2, 0x2a, 0x2c, 0xb7, 0x72, 0x8c, 0xa1, 0xe6, 0x87, 0x23, 0x6d,
	0xc0, 0x4a, 0xe4, 0x89, 0x50, 0xe3, 0x24, 0x0e, 0x50, 0x17, 0xf5, 0x30, 0x3b, 0xb1, 0x17, 0xcf,
	0x31, 0x09, 0x01, 0xc7, 0x5c, 0x73, 0x99, 0x25, 0xa9, 0x0e, 0xca, 0x5d, 0xd4, 0xab, 0x86, 0x2d,
	0xcf, 0x3f, 0x5c, 0xd5, 0xd8, 0x1a, 0xa3, 0x57, 0x50, 0xf5, 0xa2, 0xef, 0xf5, 0x53, 0x0e, 0x35,
	0x3f, 0xe3, 0xfe, 0x30, 0x77, 0x00, 0xae, 0x8b, 0x0a, 0xca, 0xe6, 0xb5, 0xbb, 0xd3, 0x78, 0x1c,
	0x7d, 0x01, 0xec, 0x0a, 0xe4, 0x12, 0x4e, 0x75, 0x32, 0x17, 0x4a, 0xf3, 0xb9, 0x1c, 0xa7, 0x3c,
	0xcd, 0x94, 0xe9, 0x72, 0xc8, 0xea, 0xee, 0xfa, 0xad, 0xb8, 0x25, 0x2d, 0xa8, 0xfc, 0xf0, 0xd9,
	0x42, 0x98, 0x47, 0x23, 0x66, 0x0f, 0xf4, 0x18, 0x2a, 0x8f, 0x73, 0xa9, 0x97, 0xe1, 0x2f, 0x02,
	0xfc, 0xf1, 0x3e, 0x8c, 0x5e, 0x8b, 0xc6, 0xe4, 0x1e, 0x60, 0xbd, 0x1c, 0xa4, 0xb3, 0xbd, 0x06,
	0xfe, 0xc0, 0x2f, 0x1a, 0x5e, 0xd5, 0xb8, 0x68, 0x89, 0x3c, 0x01, 0x76, 0x63, 0x25, 0xed, 0xad,
	0xf9, 0x6d, 0xfc, 0xbb, 0xb3, 0xbb, 0x68, 0xbf, 0x1e, 0x2d, 0x45, 0x14, 0xea, 0x05, 0xd0, 0xb7,
	0x44, 0x2e, 0xa7, 0x51, 0xdd, 0xc5, 0x1c, 0x15, 0x3b, 0x3d, 0x42, 0x93, 0x23, 0xb3, 0xdc, 0xb7,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x42, 0x7d, 0x84, 0xc7, 0xf0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TSDBLayerClient is the client API for TSDBLayer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TSDBLayerClient interface {
	WriteBatch(ctx context.Context, in *WriteBatchRequest, opts ...grpc.CallOption) (*Empty, error)
	ReadBatch(ctx context.Context, in *ReadBatchRequest, opts ...grpc.CallOption) (*ReadBatchResponse, error)
}

type tSDBLayerClient struct {
	cc *grpc.ClientConn
}

func NewTSDBLayerClient(cc *grpc.ClientConn) TSDBLayerClient {
	return &tSDBLayerClient{cc}
}

func (c *tSDBLayerClient) WriteBatch(ctx context.Context, in *WriteBatchRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/tsdblayer.TSDBLayer/WriteBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tSDBLayerClient) ReadBatch(ctx context.Context, in *ReadBatchRequest, opts ...grpc.CallOption) (*ReadBatchResponse, error) {
	out := new(ReadBatchResponse)
	err := c.cc.Invoke(ctx, "/tsdblayer.TSDBLayer/ReadBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TSDBLayerServer is the server API for TSDBLayer service.
type TSDBLayerServer interface {
	WriteBatch(context.Context, *WriteBatchRequest) (*Empty, error)
	ReadBatch(context.Context, *ReadBatchRequest) (*ReadBatchResponse, error)
}

// UnimplementedTSDBLayerServer can be embedded to have forward compatible implementations.
type UnimplementedTSDBLayerServer struct {
}

func (*UnimplementedTSDBLayerServer) WriteBatch(ctx context.Context, req *WriteBatchRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteBatch not implemented")
}
func (*UnimplementedTSDBLayerServer) ReadBatch(ctx context.Context, req *ReadBatchRequest) (*ReadBatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadBatch not implemented")
}

func RegisterTSDBLayerServer(s *grpc.Server, srv TSDBLayerServer) {
	s.RegisterService(&_TSDBLayer_serviceDesc, srv)
}

func _TSDBLayer_WriteBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSDBLayerServer).WriteBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsdblayer.TSDBLayer/WriteBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSDBLayerServer).WriteBatch(ctx, req.(*WriteBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TSDBLayer_ReadBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSDBLayerServer).ReadBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsdblayer.TSDBLayer/ReadBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSDBLayerServer).ReadBatch(ctx, req.(*ReadBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TSDBLayer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tsdblayer.TSDBLayer",
	HandlerType: (*TSDBLayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteBatch",
			Handler:    _TSDBLayer_WriteBatch_Handler,
		},
		{
			MethodName: "ReadBatch",
			Handler:    _TSDBLayer_ReadBatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/rpc.proto",
}
